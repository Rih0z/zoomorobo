//bang-bang
void zone_linetrace(){
	float lightNow;
	static float lightMin = 0;	//各自で設定
	static float lightMax = 240;	//各自で設定
	static float speed = 100; 	//パラメーター
	//static float speed = 170; 	//パラメーター
	float speedDiff;
	//float Kp = 5.0; 		//パラメーター
	float Kp = 5.0; 		//パラメーター
	
	int done;
	
	//bang-bang制御
	/*switch(mode_G){
		case 0:
			mode_G = 1;
			break;
		case 1:
			lightNow = (red_G + green_G + blue_G)/3.0;
			
			//左回転
		  	if(lightNow < (lightMin + lightMax)/2.0){
				speedDiff = -Kp * speed;
			}
			//右回転
	  		else{
				speedDiff = Kp * speed;
			}
			
	  		motorL_G = speed + speedDiff;
	  		motorR_G = speed - speedDiff;
	  		break;
		default:
	  		break;
  	}*/
  	
  	
  	//P制御
  	switch(mode_G){
		//セットアップ
		case 0:
			mode_G = 1;
			break;
		//直進(赤を検知で次のモードへ)
		case 1:
			goStraight(80);
			
			if(identifyColor(169,36,16)){
				mode_G = 2;
			}
			break;
		//左回転(白を検知で次のモードへ)
		case 2:
			turnRight(150);
			
			if(identifyColor(255,255,255)){
				mode_G = 3;
			}
			break;
		//P制御により赤線の左端に沿ってライントレース(赤と青の混合色を検知で次モードへ)
		case 3:
			lightNow = (red_G + green_G + blue_G)/3.0;
			
			speedDiff = map(lightNow,lightMin,lightMax,-Kp*speed,Kp*speed);
			
	  		motorL_G = speed + speedDiff;
	  		motorR_G = speed - speedDiff;
	  		
	  		if(identifyColor(92,37,61)){
	  			mode_G = 4;
	  			
	  			//緑に向かう際の角度調整
	  			motorR_G += (red_G - 92);
	  		}
	  		break;
		//直進(緑を検知で次モードへ)
		case 4:
			goStraight(50);
			
			if(identifyColor(75,156,75)){
	  			mode_G = 5;
	  		}
			break;
		//1秒間回転
		case 5:
			turnRight(150);
			
			done = steadyState(1000);
			if(done == 1){
		  		mode_G = 6;
			}
			break;
		//zoneNumber_G,mode_G書き換え
		case 6:
			zoneNumber_G = 0;
			mode_G = 0;
			break;
		default:
	  		break;
  	}
}



